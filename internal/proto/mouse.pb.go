// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: internal/proto/mouse.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventType defines the type of mouse event
type EventType int32

const (
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	EventType_EVENT_TYPE_MOVE        EventType = 1
	EventType_EVENT_TYPE_CLICK       EventType = 2
	EventType_EVENT_TYPE_SCROLL      EventType = 3
	EventType_EVENT_TYPE_ENTER       EventType = 4
	EventType_EVENT_TYPE_LEAVE       EventType = 5
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_MOVE",
		2: "EVENT_TYPE_CLICK",
		3: "EVENT_TYPE_SCROLL",
		4: "EVENT_TYPE_ENTER",
		5: "EVENT_TYPE_LEAVE",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"EVENT_TYPE_MOVE":        1,
		"EVENT_TYPE_CLICK":       2,
		"EVENT_TYPE_SCROLL":      3,
		"EVENT_TYPE_ENTER":       4,
		"EVENT_TYPE_LEAVE":       5,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_mouse_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_internal_proto_mouse_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_mouse_proto_rawDescGZIP(), []int{0}
}

// MouseButton defines mouse button values
type MouseButton int32

const (
	MouseButton_MOUSE_BUTTON_UNSPECIFIED MouseButton = 0
	MouseButton_MOUSE_BUTTON_LEFT        MouseButton = 1
	MouseButton_MOUSE_BUTTON_RIGHT       MouseButton = 2
	MouseButton_MOUSE_BUTTON_MIDDLE      MouseButton = 3
	MouseButton_MOUSE_BUTTON_BACK        MouseButton = 4
	MouseButton_MOUSE_BUTTON_FORWARD     MouseButton = 5
)

// Enum value maps for MouseButton.
var (
	MouseButton_name = map[int32]string{
		0: "MOUSE_BUTTON_UNSPECIFIED",
		1: "MOUSE_BUTTON_LEFT",
		2: "MOUSE_BUTTON_RIGHT",
		3: "MOUSE_BUTTON_MIDDLE",
		4: "MOUSE_BUTTON_BACK",
		5: "MOUSE_BUTTON_FORWARD",
	}
	MouseButton_value = map[string]int32{
		"MOUSE_BUTTON_UNSPECIFIED": 0,
		"MOUSE_BUTTON_LEFT":        1,
		"MOUSE_BUTTON_RIGHT":       2,
		"MOUSE_BUTTON_MIDDLE":      3,
		"MOUSE_BUTTON_BACK":        4,
		"MOUSE_BUTTON_FORWARD":     5,
	}
)

func (x MouseButton) Enum() *MouseButton {
	p := new(MouseButton)
	*p = x
	return p
}

func (x MouseButton) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MouseButton) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_mouse_proto_enumTypes[1].Descriptor()
}

func (MouseButton) Type() protoreflect.EnumType {
	return &file_internal_proto_mouse_proto_enumTypes[1]
}

func (x MouseButton) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MouseButton.Descriptor instead.
func (MouseButton) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_mouse_proto_rawDescGZIP(), []int{1}
}

// ScrollDirection defines scroll directions
type ScrollDirection int32

const (
	ScrollDirection_SCROLL_DIRECTION_UNSPECIFIED ScrollDirection = 0
	ScrollDirection_SCROLL_DIRECTION_UP          ScrollDirection = 1
	ScrollDirection_SCROLL_DIRECTION_DOWN        ScrollDirection = 2
	ScrollDirection_SCROLL_DIRECTION_LEFT        ScrollDirection = 3
	ScrollDirection_SCROLL_DIRECTION_RIGHT       ScrollDirection = 4
)

// Enum value maps for ScrollDirection.
var (
	ScrollDirection_name = map[int32]string{
		0: "SCROLL_DIRECTION_UNSPECIFIED",
		1: "SCROLL_DIRECTION_UP",
		2: "SCROLL_DIRECTION_DOWN",
		3: "SCROLL_DIRECTION_LEFT",
		4: "SCROLL_DIRECTION_RIGHT",
	}
	ScrollDirection_value = map[string]int32{
		"SCROLL_DIRECTION_UNSPECIFIED": 0,
		"SCROLL_DIRECTION_UP":          1,
		"SCROLL_DIRECTION_DOWN":        2,
		"SCROLL_DIRECTION_LEFT":        3,
		"SCROLL_DIRECTION_RIGHT":       4,
	}
)

func (x ScrollDirection) Enum() *ScrollDirection {
	p := new(ScrollDirection)
	*p = x
	return p
}

func (x ScrollDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScrollDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_mouse_proto_enumTypes[2].Descriptor()
}

func (ScrollDirection) Type() protoreflect.EnumType {
	return &file_internal_proto_mouse_proto_enumTypes[2]
}

func (x ScrollDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScrollDirection.Descriptor instead.
func (ScrollDirection) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_mouse_proto_rawDescGZIP(), []int{2}
}

// MouseEvent represents a mouse event
type MouseEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          EventType              `protobuf:"varint,1,opt,name=type,proto3,enum=waymon.EventType" json:"type,omitempty"`
	X             float64                `protobuf:"fixed64,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                `protobuf:"fixed64,3,opt,name=y,proto3" json:"y,omitempty"`
	Button        MouseButton            `protobuf:"varint,4,opt,name=button,proto3,enum=waymon.MouseButton" json:"button,omitempty"`
	Direction     ScrollDirection        `protobuf:"varint,5,opt,name=direction,proto3,enum=waymon.ScrollDirection" json:"direction,omitempty"`
	TimestampMs   int64                  `protobuf:"varint,6,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty"`
	IsPressed     bool                   `protobuf:"varint,7,opt,name=is_pressed,json=isPressed,proto3" json:"is_pressed,omitempty"` // For click events: true = press, false = release
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MouseEvent) Reset() {
	*x = MouseEvent{}
	mi := &file_internal_proto_mouse_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MouseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MouseEvent) ProtoMessage() {}

func (x *MouseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_mouse_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MouseEvent.ProtoReflect.Descriptor instead.
func (*MouseEvent) Descriptor() ([]byte, []int) {
	return file_internal_proto_mouse_proto_rawDescGZIP(), []int{0}
}

func (x *MouseEvent) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *MouseEvent) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MouseEvent) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *MouseEvent) GetButton() MouseButton {
	if x != nil {
		return x.Button
	}
	return MouseButton_MOUSE_BUTTON_UNSPECIFIED
}

func (x *MouseEvent) GetDirection() ScrollDirection {
	if x != nil {
		return x.Direction
	}
	return ScrollDirection_SCROLL_DIRECTION_UNSPECIFIED
}

func (x *MouseEvent) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

func (x *MouseEvent) GetIsPressed() bool {
	if x != nil {
		return x.IsPressed
	}
	return false
}

// EventBatch allows sending multiple events at once for efficiency
type EventBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*MouseEvent          `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventBatch) Reset() {
	*x = EventBatch{}
	mi := &file_internal_proto_mouse_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBatch) ProtoMessage() {}

func (x *EventBatch) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_mouse_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBatch.ProtoReflect.Descriptor instead.
func (*EventBatch) Descriptor() ([]byte, []int) {
	return file_internal_proto_mouse_proto_rawDescGZIP(), []int{1}
}

func (x *EventBatch) GetEvents() []*MouseEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_internal_proto_mouse_proto protoreflect.FileDescriptor

const file_internal_proto_mouse_proto_rawDesc = "" +
	"\n" +
	"\x1ainternal/proto/mouse.proto\x12\x06waymon\"\xf5\x01\n" +
	"\n" +
	"MouseEvent\x12%\n" +
	"\x04type\x18\x01 \x01(\x0e2\x11.waymon.EventTypeR\x04type\x12\f\n" +
	"\x01x\x18\x02 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x01R\x01y\x12+\n" +
	"\x06button\x18\x04 \x01(\x0e2\x13.waymon.MouseButtonR\x06button\x125\n" +
	"\tdirection\x18\x05 \x01(\x0e2\x17.waymon.ScrollDirectionR\tdirection\x12!\n" +
	"\ftimestamp_ms\x18\x06 \x01(\x03R\vtimestampMs\x12\x1d\n" +
	"\n" +
	"is_pressed\x18\a \x01(\bR\tisPressed\"8\n" +
	"\n" +
	"EventBatch\x12*\n" +
	"\x06events\x18\x01 \x03(\v2\x12.waymon.MouseEventR\x06events*\x95\x01\n" +
	"\tEventType\x12\x1a\n" +
	"\x16EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fEVENT_TYPE_MOVE\x10\x01\x12\x14\n" +
	"\x10EVENT_TYPE_CLICK\x10\x02\x12\x15\n" +
	"\x11EVENT_TYPE_SCROLL\x10\x03\x12\x14\n" +
	"\x10EVENT_TYPE_ENTER\x10\x04\x12\x14\n" +
	"\x10EVENT_TYPE_LEAVE\x10\x05*\xa4\x01\n" +
	"\vMouseButton\x12\x1c\n" +
	"\x18MOUSE_BUTTON_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11MOUSE_BUTTON_LEFT\x10\x01\x12\x16\n" +
	"\x12MOUSE_BUTTON_RIGHT\x10\x02\x12\x17\n" +
	"\x13MOUSE_BUTTON_MIDDLE\x10\x03\x12\x15\n" +
	"\x11MOUSE_BUTTON_BACK\x10\x04\x12\x18\n" +
	"\x14MOUSE_BUTTON_FORWARD\x10\x05*\x9e\x01\n" +
	"\x0fScrollDirection\x12 \n" +
	"\x1cSCROLL_DIRECTION_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13SCROLL_DIRECTION_UP\x10\x01\x12\x19\n" +
	"\x15SCROLL_DIRECTION_DOWN\x10\x02\x12\x19\n" +
	"\x15SCROLL_DIRECTION_LEFT\x10\x03\x12\x1a\n" +
	"\x16SCROLL_DIRECTION_RIGHT\x10\x04B(Z&github.com/bnema/waymon/internal/protob\x06proto3"

var (
	file_internal_proto_mouse_proto_rawDescOnce sync.Once
	file_internal_proto_mouse_proto_rawDescData []byte
)

func file_internal_proto_mouse_proto_rawDescGZIP() []byte {
	file_internal_proto_mouse_proto_rawDescOnce.Do(func() {
		file_internal_proto_mouse_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_proto_mouse_proto_rawDesc), len(file_internal_proto_mouse_proto_rawDesc)))
	})
	return file_internal_proto_mouse_proto_rawDescData
}

var file_internal_proto_mouse_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_internal_proto_mouse_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_internal_proto_mouse_proto_goTypes = []any{
	(EventType)(0),       // 0: waymon.EventType
	(MouseButton)(0),     // 1: waymon.MouseButton
	(ScrollDirection)(0), // 2: waymon.ScrollDirection
	(*MouseEvent)(nil),   // 3: waymon.MouseEvent
	(*EventBatch)(nil),   // 4: waymon.EventBatch
}
var file_internal_proto_mouse_proto_depIdxs = []int32{
	0, // 0: waymon.MouseEvent.type:type_name -> waymon.EventType
	1, // 1: waymon.MouseEvent.button:type_name -> waymon.MouseButton
	2, // 2: waymon.MouseEvent.direction:type_name -> waymon.ScrollDirection
	3, // 3: waymon.EventBatch.events:type_name -> waymon.MouseEvent
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_internal_proto_mouse_proto_init() }
func file_internal_proto_mouse_proto_init() {
	if File_internal_proto_mouse_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_proto_mouse_proto_rawDesc), len(file_internal_proto_mouse_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_proto_mouse_proto_goTypes,
		DependencyIndexes: file_internal_proto_mouse_proto_depIdxs,
		EnumInfos:         file_internal_proto_mouse_proto_enumTypes,
		MessageInfos:      file_internal_proto_mouse_proto_msgTypes,
	}.Build()
	File_internal_proto_mouse_proto = out.File
	file_internal_proto_mouse_proto_goTypes = nil
	file_internal_proto_mouse_proto_depIdxs = nil
}
