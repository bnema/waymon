// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: internal/protocol/events.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScrollType int32

const (
	ScrollType_SCROLL_WHEEL      ScrollType = 0
	ScrollType_SCROLL_FINGER     ScrollType = 1
	ScrollType_SCROLL_CONTINUOUS ScrollType = 2
)

// Enum value maps for ScrollType.
var (
	ScrollType_name = map[int32]string{
		0: "SCROLL_WHEEL",
		1: "SCROLL_FINGER",
		2: "SCROLL_CONTINUOUS",
	}
	ScrollType_value = map[string]int32{
		"SCROLL_WHEEL":      0,
		"SCROLL_FINGER":     1,
		"SCROLL_CONTINUOUS": 2,
	}
)

func (x ScrollType) Enum() *ScrollType {
	p := new(ScrollType)
	*p = x
	return p
}

func (x ScrollType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScrollType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_protocol_events_proto_enumTypes[0].Descriptor()
}

func (ScrollType) Type() protoreflect.EnumType {
	return &file_internal_protocol_events_proto_enumTypes[0]
}

func (x ScrollType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScrollType.Descriptor instead.
func (ScrollType) EnumDescriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{0}
}

type ClientStatus int32

const (
	ClientStatus_CLIENT_IDLE             ClientStatus = 0
	ClientStatus_CLIENT_BEING_CONTROLLED ClientStatus = 1
	ClientStatus_CLIENT_DISCONNECTED     ClientStatus = 2
)

// Enum value maps for ClientStatus.
var (
	ClientStatus_name = map[int32]string{
		0: "CLIENT_IDLE",
		1: "CLIENT_BEING_CONTROLLED",
		2: "CLIENT_DISCONNECTED",
	}
	ClientStatus_value = map[string]int32{
		"CLIENT_IDLE":             0,
		"CLIENT_BEING_CONTROLLED": 1,
		"CLIENT_DISCONNECTED":     2,
	}
)

func (x ClientStatus) Enum() *ClientStatus {
	p := new(ClientStatus)
	*p = x
	return p
}

func (x ClientStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_protocol_events_proto_enumTypes[1].Descriptor()
}

func (ClientStatus) Type() protoreflect.EnumType {
	return &file_internal_protocol_events_proto_enumTypes[1]
}

func (x ClientStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientStatus.Descriptor instead.
func (ClientStatus) EnumDescriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{1}
}

type ControlEvent_Type int32

const (
	ControlEvent_SWITCH_TO_LOCAL      ControlEvent_Type = 0
	ControlEvent_SWITCH_TO_CLIENT     ControlEvent_Type = 1
	ControlEvent_REQUEST_CONTROL      ControlEvent_Type = 2
	ControlEvent_RELEASE_CONTROL      ControlEvent_Type = 3
	ControlEvent_CLIENT_LIST_REQUEST  ControlEvent_Type = 4
	ControlEvent_CLIENT_LIST_RESPONSE ControlEvent_Type = 5
	ControlEvent_CLIENT_CONFIG        ControlEvent_Type = 6 // Client sends its configuration
	ControlEvent_SERVER_SHUTDOWN      ControlEvent_Type = 7 // Server is shutting down gracefully
)

// Enum value maps for ControlEvent_Type.
var (
	ControlEvent_Type_name = map[int32]string{
		0: "SWITCH_TO_LOCAL",
		1: "SWITCH_TO_CLIENT",
		2: "REQUEST_CONTROL",
		3: "RELEASE_CONTROL",
		4: "CLIENT_LIST_REQUEST",
		5: "CLIENT_LIST_RESPONSE",
		6: "CLIENT_CONFIG",
		7: "SERVER_SHUTDOWN",
	}
	ControlEvent_Type_value = map[string]int32{
		"SWITCH_TO_LOCAL":      0,
		"SWITCH_TO_CLIENT":     1,
		"REQUEST_CONTROL":      2,
		"RELEASE_CONTROL":      3,
		"CLIENT_LIST_REQUEST":  4,
		"CLIENT_LIST_RESPONSE": 5,
		"CLIENT_CONFIG":        6,
		"SERVER_SHUTDOWN":      7,
	}
)

func (x ControlEvent_Type) Enum() *ControlEvent_Type {
	p := new(ControlEvent_Type)
	*p = x
	return p
}

func (x ControlEvent_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlEvent_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_protocol_events_proto_enumTypes[2].Descriptor()
}

func (ControlEvent_Type) Type() protoreflect.EnumType {
	return &file_internal_protocol_events_proto_enumTypes[2]
}

func (x ControlEvent_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlEvent_Type.Descriptor instead.
func (ControlEvent_Type) EnumDescriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{6, 0}
}

// InputEvent is the main event message sent between server and clients
type InputEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*InputEvent_MouseMove
	//	*InputEvent_MouseButton
	//	*InputEvent_MouseScroll
	//	*InputEvent_Keyboard
	//	*InputEvent_Control
	//	*InputEvent_MousePosition
	Event         isInputEvent_Event `protobuf_oneof:"event"`
	Timestamp     int64              `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SourceId      string             `protobuf:"bytes,8,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"` // Which server sent this
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputEvent) Reset() {
	*x = InputEvent{}
	mi := &file_internal_protocol_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputEvent) ProtoMessage() {}

func (x *InputEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputEvent.ProtoReflect.Descriptor instead.
func (*InputEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{0}
}

func (x *InputEvent) GetEvent() isInputEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *InputEvent) GetMouseMove() *MouseMoveEvent {
	if x != nil {
		if x, ok := x.Event.(*InputEvent_MouseMove); ok {
			return x.MouseMove
		}
	}
	return nil
}

func (x *InputEvent) GetMouseButton() *MouseButtonEvent {
	if x != nil {
		if x, ok := x.Event.(*InputEvent_MouseButton); ok {
			return x.MouseButton
		}
	}
	return nil
}

func (x *InputEvent) GetMouseScroll() *MouseScrollEvent {
	if x != nil {
		if x, ok := x.Event.(*InputEvent_MouseScroll); ok {
			return x.MouseScroll
		}
	}
	return nil
}

func (x *InputEvent) GetKeyboard() *KeyboardEvent {
	if x != nil {
		if x, ok := x.Event.(*InputEvent_Keyboard); ok {
			return x.Keyboard
		}
	}
	return nil
}

func (x *InputEvent) GetControl() *ControlEvent {
	if x != nil {
		if x, ok := x.Event.(*InputEvent_Control); ok {
			return x.Control
		}
	}
	return nil
}

func (x *InputEvent) GetMousePosition() *MousePositionEvent {
	if x != nil {
		if x, ok := x.Event.(*InputEvent_MousePosition); ok {
			return x.MousePosition
		}
	}
	return nil
}

func (x *InputEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *InputEvent) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

type isInputEvent_Event interface {
	isInputEvent_Event()
}

type InputEvent_MouseMove struct {
	MouseMove *MouseMoveEvent `protobuf:"bytes,1,opt,name=mouse_move,json=mouseMove,proto3,oneof"`
}

type InputEvent_MouseButton struct {
	MouseButton *MouseButtonEvent `protobuf:"bytes,2,opt,name=mouse_button,json=mouseButton,proto3,oneof"`
}

type InputEvent_MouseScroll struct {
	MouseScroll *MouseScrollEvent `protobuf:"bytes,3,opt,name=mouse_scroll,json=mouseScroll,proto3,oneof"`
}

type InputEvent_Keyboard struct {
	Keyboard *KeyboardEvent `protobuf:"bytes,4,opt,name=keyboard,proto3,oneof"`
}

type InputEvent_Control struct {
	Control *ControlEvent `protobuf:"bytes,5,opt,name=control,proto3,oneof"`
}

type InputEvent_MousePosition struct {
	MousePosition *MousePositionEvent `protobuf:"bytes,6,opt,name=mouse_position,json=mousePosition,proto3,oneof"`
}

func (*InputEvent_MouseMove) isInputEvent_Event() {}

func (*InputEvent_MouseButton) isInputEvent_Event() {}

func (*InputEvent_MouseScroll) isInputEvent_Event() {}

func (*InputEvent_Keyboard) isInputEvent_Event() {}

func (*InputEvent_Control) isInputEvent_Event() {}

func (*InputEvent_MousePosition) isInputEvent_Event() {}

// Mouse movement with relative coordinates
type MouseMoveEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dx            float64                `protobuf:"fixed64,1,opt,name=dx,proto3" json:"dx,omitempty"`
	Dy            float64                `protobuf:"fixed64,2,opt,name=dy,proto3" json:"dy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MouseMoveEvent) Reset() {
	*x = MouseMoveEvent{}
	mi := &file_internal_protocol_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MouseMoveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MouseMoveEvent) ProtoMessage() {}

func (x *MouseMoveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MouseMoveEvent.ProtoReflect.Descriptor instead.
func (*MouseMoveEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{1}
}

func (x *MouseMoveEvent) GetDx() float64 {
	if x != nil {
		return x.Dx
	}
	return 0
}

func (x *MouseMoveEvent) GetDy() float64 {
	if x != nil {
		return x.Dy
	}
	return 0
}

// Absolute mouse positioning
type MousePositionEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"` // Absolute X coordinate
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"` // Absolute Y coordinate
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MousePositionEvent) Reset() {
	*x = MousePositionEvent{}
	mi := &file_internal_protocol_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MousePositionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MousePositionEvent) ProtoMessage() {}

func (x *MousePositionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MousePositionEvent.ProtoReflect.Descriptor instead.
func (*MousePositionEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{2}
}

func (x *MousePositionEvent) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MousePositionEvent) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// Mouse button press/release
type MouseButtonEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Button        uint32                 `protobuf:"varint,1,opt,name=button,proto3" json:"button,omitempty"`   // Button number (1=left, 2=middle, 3=right, etc.)
	Pressed       bool                   `protobuf:"varint,2,opt,name=pressed,proto3" json:"pressed,omitempty"` // true=press, false=release
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MouseButtonEvent) Reset() {
	*x = MouseButtonEvent{}
	mi := &file_internal_protocol_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MouseButtonEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MouseButtonEvent) ProtoMessage() {}

func (x *MouseButtonEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MouseButtonEvent.ProtoReflect.Descriptor instead.
func (*MouseButtonEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{3}
}

func (x *MouseButtonEvent) GetButton() uint32 {
	if x != nil {
		return x.Button
	}
	return 0
}

func (x *MouseButtonEvent) GetPressed() bool {
	if x != nil {
		return x.Pressed
	}
	return false
}

// Mouse scroll/wheel events
type MouseScrollEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dx            float64                `protobuf:"fixed64,1,opt,name=dx,proto3" json:"dx,omitempty"` // Horizontal scroll
	Dy            float64                `protobuf:"fixed64,2,opt,name=dy,proto3" json:"dy,omitempty"` // Vertical scroll
	Type          ScrollType             `protobuf:"varint,3,opt,name=type,proto3,enum=waymon.protocol.ScrollType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MouseScrollEvent) Reset() {
	*x = MouseScrollEvent{}
	mi := &file_internal_protocol_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MouseScrollEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MouseScrollEvent) ProtoMessage() {}

func (x *MouseScrollEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MouseScrollEvent.ProtoReflect.Descriptor instead.
func (*MouseScrollEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{4}
}

func (x *MouseScrollEvent) GetDx() float64 {
	if x != nil {
		return x.Dx
	}
	return 0
}

func (x *MouseScrollEvent) GetDy() float64 {
	if x != nil {
		return x.Dy
	}
	return 0
}

func (x *MouseScrollEvent) GetType() ScrollType {
	if x != nil {
		return x.Type
	}
	return ScrollType_SCROLL_WHEEL
}

// Keyboard key press/release
type KeyboardEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           uint32                 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`             // Key code
	Pressed       bool                   `protobuf:"varint,2,opt,name=pressed,proto3" json:"pressed,omitempty"`     // true=press, false=release
	Modifiers     uint32                 `protobuf:"varint,3,opt,name=modifiers,proto3" json:"modifiers,omitempty"` // Modifier mask (Ctrl, Alt, Shift, etc.)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyboardEvent) Reset() {
	*x = KeyboardEvent{}
	mi := &file_internal_protocol_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyboardEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyboardEvent) ProtoMessage() {}

func (x *KeyboardEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyboardEvent.ProtoReflect.Descriptor instead.
func (*KeyboardEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{5}
}

func (x *KeyboardEvent) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *KeyboardEvent) GetPressed() bool {
	if x != nil {
		return x.Pressed
	}
	return false
}

func (x *KeyboardEvent) GetModifiers() uint32 {
	if x != nil {
		return x.Modifiers
	}
	return 0
}

// Control messages for switching targets, etc.
type ControlEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ControlEvent_Type      `protobuf:"varint,1,opt,name=type,proto3,enum=waymon.protocol.ControlEvent_Type" json:"type,omitempty"`
	TargetId      string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`             // For SWITCH_TO_CLIENT
	ClientConfig  *ClientConfig          `protobuf:"bytes,3,opt,name=client_config,json=clientConfig,proto3" json:"client_config,omitempty"` // For CLIENT_CONFIG
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlEvent) Reset() {
	*x = ControlEvent{}
	mi := &file_internal_protocol_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlEvent) ProtoMessage() {}

func (x *ControlEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlEvent.ProtoReflect.Descriptor instead.
func (*ControlEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{6}
}

func (x *ControlEvent) GetType() ControlEvent_Type {
	if x != nil {
		return x.Type
	}
	return ControlEvent_SWITCH_TO_LOCAL
}

func (x *ControlEvent) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *ControlEvent) GetClientConfig() *ClientConfig {
	if x != nil {
		return x.ClientConfig
	}
	return nil
}

// Client information for server management
type ClientInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Status        ClientStatus           `protobuf:"varint,4,opt,name=status,proto3,enum=waymon.protocol.ClientStatus" json:"status,omitempty"`
	ConnectedAt   int64                  `protobuf:"varint,5,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	mi := &file_internal_protocol_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{7}
}

func (x *ClientInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClientInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ClientInfo) GetStatus() ClientStatus {
	if x != nil {
		return x.Status
	}
	return ClientStatus_CLIENT_IDLE
}

func (x *ClientInfo) GetConnectedAt() int64 {
	if x != nil {
		return x.ConnectedAt
	}
	return 0
}

// Server information and capabilities
type ServerInfo struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ConnectedClients     []*ClientInfo          `protobuf:"bytes,3,rep,name=connected_clients,json=connectedClients,proto3" json:"connected_clients,omitempty"`
	CurrentlyControlling string                 `protobuf:"bytes,4,opt,name=currently_controlling,json=currentlyControlling,proto3" json:"currently_controlling,omitempty"` // Client ID currently being controlled
	Capabilities         *ServerCapabilities    `protobuf:"bytes,5,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	mi := &file_internal_protocol_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{8}
}

func (x *ServerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerInfo) GetConnectedClients() []*ClientInfo {
	if x != nil {
		return x.ConnectedClients
	}
	return nil
}

func (x *ServerInfo) GetCurrentlyControlling() string {
	if x != nil {
		return x.CurrentlyControlling
	}
	return ""
}

func (x *ServerInfo) GetCapabilities() *ServerCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type ServerCapabilities struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SupportsKeyboard bool                   `protobuf:"varint,1,opt,name=supports_keyboard,json=supportsKeyboard,proto3" json:"supports_keyboard,omitempty"`
	SupportsMouse    bool                   `protobuf:"varint,2,opt,name=supports_mouse,json=supportsMouse,proto3" json:"supports_mouse,omitempty"`
	SupportsScroll   bool                   `protobuf:"varint,3,opt,name=supports_scroll,json=supportsScroll,proto3" json:"supports_scroll,omitempty"`
	SupportsHotkeys  bool                   `protobuf:"varint,4,opt,name=supports_hotkeys,json=supportsHotkeys,proto3" json:"supports_hotkeys,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ServerCapabilities) Reset() {
	*x = ServerCapabilities{}
	mi := &file_internal_protocol_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCapabilities) ProtoMessage() {}

func (x *ServerCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCapabilities.ProtoReflect.Descriptor instead.
func (*ServerCapabilities) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{9}
}

func (x *ServerCapabilities) GetSupportsKeyboard() bool {
	if x != nil {
		return x.SupportsKeyboard
	}
	return false
}

func (x *ServerCapabilities) GetSupportsMouse() bool {
	if x != nil {
		return x.SupportsMouse
	}
	return false
}

func (x *ServerCapabilities) GetSupportsScroll() bool {
	if x != nil {
		return x.SupportsScroll
	}
	return false
}

func (x *ServerCapabilities) GetSupportsHotkeys() bool {
	if x != nil {
		return x.SupportsHotkeys
	}
	return false
}

// Client configuration sent on connect
type ClientConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ClientId       string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientName     string                 `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	Monitors       []*Monitor             `protobuf:"bytes,3,rep,name=monitors,proto3" json:"monitors,omitempty"`
	Capabilities   *ClientCapabilities    `protobuf:"bytes,4,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	KeyboardLayout string                 `protobuf:"bytes,5,opt,name=keyboard_layout,json=keyboardLayout,proto3" json:"keyboard_layout,omitempty"` // Keyboard layout (e.g., "us", "fr", "de")
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClientConfig) Reset() {
	*x = ClientConfig{}
	mi := &file_internal_protocol_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConfig) ProtoMessage() {}

func (x *ClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConfig.ProtoReflect.Descriptor instead.
func (*ClientConfig) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{10}
}

func (x *ClientConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ClientConfig) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *ClientConfig) GetMonitors() []*Monitor {
	if x != nil {
		return x.Monitors
	}
	return nil
}

func (x *ClientConfig) GetCapabilities() *ClientCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *ClientConfig) GetKeyboardLayout() string {
	if x != nil {
		return x.KeyboardLayout
	}
	return ""
}

// Monitor/display information
type Monitor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	X             int32                  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`                                        // Position X
	Y             int32                  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`                                        // Position Y
	Width         int32                  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`                                // Resolution width
	Height        int32                  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`                              // Resolution height
	Primary       bool                   `protobuf:"varint,6,opt,name=primary,proto3" json:"primary,omitempty"`                            // Is primary monitor
	Scale         float64                `protobuf:"fixed64,7,opt,name=scale,proto3" json:"scale,omitempty"`                               // DPI scale factor
	RefreshRate   int32                  `protobuf:"varint,8,opt,name=refresh_rate,json=refreshRate,proto3" json:"refresh_rate,omitempty"` // Refresh rate in Hz
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Monitor) Reset() {
	*x = Monitor{}
	mi := &file_internal_protocol_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Monitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monitor) ProtoMessage() {}

func (x *Monitor) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monitor.ProtoReflect.Descriptor instead.
func (*Monitor) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{11}
}

func (x *Monitor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Monitor) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Monitor) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Monitor) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Monitor) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Monitor) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

func (x *Monitor) GetScale() float64 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *Monitor) GetRefreshRate() int32 {
	if x != nil {
		return x.RefreshRate
	}
	return 0
}

// Client capabilities
type ClientCapabilities struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CanReceiveKeyboard bool                   `protobuf:"varint,1,opt,name=can_receive_keyboard,json=canReceiveKeyboard,proto3" json:"can_receive_keyboard,omitempty"`
	CanReceiveMouse    bool                   `protobuf:"varint,2,opt,name=can_receive_mouse,json=canReceiveMouse,proto3" json:"can_receive_mouse,omitempty"`
	CanReceiveScroll   bool                   `protobuf:"varint,3,opt,name=can_receive_scroll,json=canReceiveScroll,proto3" json:"can_receive_scroll,omitempty"`
	WaylandCompositor  string                 `protobuf:"bytes,4,opt,name=wayland_compositor,json=waylandCompositor,proto3" json:"wayland_compositor,omitempty"` // Wayland compositor type
	UinputVersion      string                 `protobuf:"bytes,5,opt,name=uinput_version,json=uinputVersion,proto3" json:"uinput_version,omitempty"`             // uinput library version
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ClientCapabilities) Reset() {
	*x = ClientCapabilities{}
	mi := &file_internal_protocol_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCapabilities) ProtoMessage() {}

func (x *ClientCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCapabilities.ProtoReflect.Descriptor instead.
func (*ClientCapabilities) Descriptor() ([]byte, []int) {
	return file_internal_protocol_events_proto_rawDescGZIP(), []int{12}
}

func (x *ClientCapabilities) GetCanReceiveKeyboard() bool {
	if x != nil {
		return x.CanReceiveKeyboard
	}
	return false
}

func (x *ClientCapabilities) GetCanReceiveMouse() bool {
	if x != nil {
		return x.CanReceiveMouse
	}
	return false
}

func (x *ClientCapabilities) GetCanReceiveScroll() bool {
	if x != nil {
		return x.CanReceiveScroll
	}
	return false
}

func (x *ClientCapabilities) GetWaylandCompositor() string {
	if x != nil {
		return x.WaylandCompositor
	}
	return ""
}

func (x *ClientCapabilities) GetUinputVersion() string {
	if x != nil {
		return x.UinputVersion
	}
	return ""
}

var File_internal_protocol_events_proto protoreflect.FileDescriptor

const file_internal_protocol_events_proto_rawDesc = "" +
	"\n" +
	"\x1einternal/protocol/events.proto\x12\x0fwaymon.protocol\"\xe9\x03\n" +
	"\n" +
	"InputEvent\x12@\n" +
	"\n" +
	"mouse_move\x18\x01 \x01(\v2\x1f.waymon.protocol.MouseMoveEventH\x00R\tmouseMove\x12F\n" +
	"\fmouse_button\x18\x02 \x01(\v2!.waymon.protocol.MouseButtonEventH\x00R\vmouseButton\x12F\n" +
	"\fmouse_scroll\x18\x03 \x01(\v2!.waymon.protocol.MouseScrollEventH\x00R\vmouseScroll\x12<\n" +
	"\bkeyboard\x18\x04 \x01(\v2\x1e.waymon.protocol.KeyboardEventH\x00R\bkeyboard\x129\n" +
	"\acontrol\x18\x05 \x01(\v2\x1d.waymon.protocol.ControlEventH\x00R\acontrol\x12L\n" +
	"\x0emouse_position\x18\x06 \x01(\v2#.waymon.protocol.MousePositionEventH\x00R\rmousePosition\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\x03R\ttimestamp\x12\x1b\n" +
	"\tsource_id\x18\b \x01(\tR\bsourceIdB\a\n" +
	"\x05event\"0\n" +
	"\x0eMouseMoveEvent\x12\x0e\n" +
	"\x02dx\x18\x01 \x01(\x01R\x02dx\x12\x0e\n" +
	"\x02dy\x18\x02 \x01(\x01R\x02dy\"0\n" +
	"\x12MousePositionEvent\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\"D\n" +
	"\x10MouseButtonEvent\x12\x16\n" +
	"\x06button\x18\x01 \x01(\rR\x06button\x12\x18\n" +
	"\apressed\x18\x02 \x01(\bR\apressed\"c\n" +
	"\x10MouseScrollEvent\x12\x0e\n" +
	"\x02dx\x18\x01 \x01(\x01R\x02dx\x12\x0e\n" +
	"\x02dy\x18\x02 \x01(\x01R\x02dy\x12/\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1b.waymon.protocol.ScrollTypeR\x04type\"Y\n" +
	"\rKeyboardEvent\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x18\n" +
	"\apressed\x18\x02 \x01(\bR\apressed\x12\x1c\n" +
	"\tmodifiers\x18\x03 \x01(\rR\tmodifiers\"\xe0\x02\n" +
	"\fControlEvent\x126\n" +
	"\x04type\x18\x01 \x01(\x0e2\".waymon.protocol.ControlEvent.TypeR\x04type\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\tR\btargetId\x12B\n" +
	"\rclient_config\x18\x03 \x01(\v2\x1d.waymon.protocol.ClientConfigR\fclientConfig\"\xb6\x01\n" +
	"\x04Type\x12\x13\n" +
	"\x0fSWITCH_TO_LOCAL\x10\x00\x12\x14\n" +
	"\x10SWITCH_TO_CLIENT\x10\x01\x12\x13\n" +
	"\x0fREQUEST_CONTROL\x10\x02\x12\x13\n" +
	"\x0fRELEASE_CONTROL\x10\x03\x12\x17\n" +
	"\x13CLIENT_LIST_REQUEST\x10\x04\x12\x18\n" +
	"\x14CLIENT_LIST_RESPONSE\x10\x05\x12\x11\n" +
	"\rCLIENT_CONFIG\x10\x06\x12\x13\n" +
	"\x0fSERVER_SHUTDOWN\x10\a\"\xa4\x01\n" +
	"\n" +
	"ClientInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x125\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1d.waymon.protocol.ClientStatusR\x06status\x12!\n" +
	"\fconnected_at\x18\x05 \x01(\x03R\vconnectedAt\"\xf8\x01\n" +
	"\n" +
	"ServerInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12H\n" +
	"\x11connected_clients\x18\x03 \x03(\v2\x1b.waymon.protocol.ClientInfoR\x10connectedClients\x123\n" +
	"\x15currently_controlling\x18\x04 \x01(\tR\x14currentlyControlling\x12G\n" +
	"\fcapabilities\x18\x05 \x01(\v2#.waymon.protocol.ServerCapabilitiesR\fcapabilities\"\xbc\x01\n" +
	"\x12ServerCapabilities\x12+\n" +
	"\x11supports_keyboard\x18\x01 \x01(\bR\x10supportsKeyboard\x12%\n" +
	"\x0esupports_mouse\x18\x02 \x01(\bR\rsupportsMouse\x12'\n" +
	"\x0fsupports_scroll\x18\x03 \x01(\bR\x0esupportsScroll\x12)\n" +
	"\x10supports_hotkeys\x18\x04 \x01(\bR\x0fsupportsHotkeys\"\xf4\x01\n" +
	"\fClientConfig\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1f\n" +
	"\vclient_name\x18\x02 \x01(\tR\n" +
	"clientName\x124\n" +
	"\bmonitors\x18\x03 \x03(\v2\x18.waymon.protocol.MonitorR\bmonitors\x12G\n" +
	"\fcapabilities\x18\x04 \x01(\v2#.waymon.protocol.ClientCapabilitiesR\fcapabilities\x12'\n" +
	"\x0fkeyboard_layout\x18\x05 \x01(\tR\x0ekeyboardLayout\"\xba\x01\n" +
	"\aMonitor\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\f\n" +
	"\x01x\x18\x02 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x05R\x01y\x12\x14\n" +
	"\x05width\x18\x04 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x05 \x01(\x05R\x06height\x12\x18\n" +
	"\aprimary\x18\x06 \x01(\bR\aprimary\x12\x14\n" +
	"\x05scale\x18\a \x01(\x01R\x05scale\x12!\n" +
	"\frefresh_rate\x18\b \x01(\x05R\vrefreshRate\"\xf6\x01\n" +
	"\x12ClientCapabilities\x120\n" +
	"\x14can_receive_keyboard\x18\x01 \x01(\bR\x12canReceiveKeyboard\x12*\n" +
	"\x11can_receive_mouse\x18\x02 \x01(\bR\x0fcanReceiveMouse\x12,\n" +
	"\x12can_receive_scroll\x18\x03 \x01(\bR\x10canReceiveScroll\x12-\n" +
	"\x12wayland_compositor\x18\x04 \x01(\tR\x11waylandCompositor\x12%\n" +
	"\x0euinput_version\x18\x05 \x01(\tR\ruinputVersion*H\n" +
	"\n" +
	"ScrollType\x12\x10\n" +
	"\fSCROLL_WHEEL\x10\x00\x12\x11\n" +
	"\rSCROLL_FINGER\x10\x01\x12\x15\n" +
	"\x11SCROLL_CONTINUOUS\x10\x02*U\n" +
	"\fClientStatus\x12\x0f\n" +
	"\vCLIENT_IDLE\x10\x00\x12\x1b\n" +
	"\x17CLIENT_BEING_CONTROLLED\x10\x01\x12\x17\n" +
	"\x13CLIENT_DISCONNECTED\x10\x02B+Z)github.com/bnema/waymon/internal/protocolb\x06proto3"

var (
	file_internal_protocol_events_proto_rawDescOnce sync.Once
	file_internal_protocol_events_proto_rawDescData []byte
)

func file_internal_protocol_events_proto_rawDescGZIP() []byte {
	file_internal_protocol_events_proto_rawDescOnce.Do(func() {
		file_internal_protocol_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_protocol_events_proto_rawDesc), len(file_internal_protocol_events_proto_rawDesc)))
	})
	return file_internal_protocol_events_proto_rawDescData
}

var file_internal_protocol_events_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_internal_protocol_events_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_internal_protocol_events_proto_goTypes = []any{
	(ScrollType)(0),            // 0: waymon.protocol.ScrollType
	(ClientStatus)(0),          // 1: waymon.protocol.ClientStatus
	(ControlEvent_Type)(0),     // 2: waymon.protocol.ControlEvent.Type
	(*InputEvent)(nil),         // 3: waymon.protocol.InputEvent
	(*MouseMoveEvent)(nil),     // 4: waymon.protocol.MouseMoveEvent
	(*MousePositionEvent)(nil), // 5: waymon.protocol.MousePositionEvent
	(*MouseButtonEvent)(nil),   // 6: waymon.protocol.MouseButtonEvent
	(*MouseScrollEvent)(nil),   // 7: waymon.protocol.MouseScrollEvent
	(*KeyboardEvent)(nil),      // 8: waymon.protocol.KeyboardEvent
	(*ControlEvent)(nil),       // 9: waymon.protocol.ControlEvent
	(*ClientInfo)(nil),         // 10: waymon.protocol.ClientInfo
	(*ServerInfo)(nil),         // 11: waymon.protocol.ServerInfo
	(*ServerCapabilities)(nil), // 12: waymon.protocol.ServerCapabilities
	(*ClientConfig)(nil),       // 13: waymon.protocol.ClientConfig
	(*Monitor)(nil),            // 14: waymon.protocol.Monitor
	(*ClientCapabilities)(nil), // 15: waymon.protocol.ClientCapabilities
}
var file_internal_protocol_events_proto_depIdxs = []int32{
	4,  // 0: waymon.protocol.InputEvent.mouse_move:type_name -> waymon.protocol.MouseMoveEvent
	6,  // 1: waymon.protocol.InputEvent.mouse_button:type_name -> waymon.protocol.MouseButtonEvent
	7,  // 2: waymon.protocol.InputEvent.mouse_scroll:type_name -> waymon.protocol.MouseScrollEvent
	8,  // 3: waymon.protocol.InputEvent.keyboard:type_name -> waymon.protocol.KeyboardEvent
	9,  // 4: waymon.protocol.InputEvent.control:type_name -> waymon.protocol.ControlEvent
	5,  // 5: waymon.protocol.InputEvent.mouse_position:type_name -> waymon.protocol.MousePositionEvent
	0,  // 6: waymon.protocol.MouseScrollEvent.type:type_name -> waymon.protocol.ScrollType
	2,  // 7: waymon.protocol.ControlEvent.type:type_name -> waymon.protocol.ControlEvent.Type
	13, // 8: waymon.protocol.ControlEvent.client_config:type_name -> waymon.protocol.ClientConfig
	1,  // 9: waymon.protocol.ClientInfo.status:type_name -> waymon.protocol.ClientStatus
	10, // 10: waymon.protocol.ServerInfo.connected_clients:type_name -> waymon.protocol.ClientInfo
	12, // 11: waymon.protocol.ServerInfo.capabilities:type_name -> waymon.protocol.ServerCapabilities
	14, // 12: waymon.protocol.ClientConfig.monitors:type_name -> waymon.protocol.Monitor
	15, // 13: waymon.protocol.ClientConfig.capabilities:type_name -> waymon.protocol.ClientCapabilities
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_internal_protocol_events_proto_init() }
func file_internal_protocol_events_proto_init() {
	if File_internal_protocol_events_proto != nil {
		return
	}
	file_internal_protocol_events_proto_msgTypes[0].OneofWrappers = []any{
		(*InputEvent_MouseMove)(nil),
		(*InputEvent_MouseButton)(nil),
		(*InputEvent_MouseScroll)(nil),
		(*InputEvent_Keyboard)(nil),
		(*InputEvent_Control)(nil),
		(*InputEvent_MousePosition)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_protocol_events_proto_rawDesc), len(file_internal_protocol_events_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_protocol_events_proto_goTypes,
		DependencyIndexes: file_internal_protocol_events_proto_depIdxs,
		EnumInfos:         file_internal_protocol_events_proto_enumTypes,
		MessageInfos:      file_internal_protocol_events_proto_msgTypes,
	}.Build()
	File_internal_protocol_events_proto = out.File
	file_internal_protocol_events_proto_goTypes = nil
	file_internal_protocol_events_proto_depIdxs = nil
}
